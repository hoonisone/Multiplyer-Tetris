[Title]: static함수를 만들고 기능을 테스트 하자!
[Task] 아래 실험과정(Test)를 수행하고 질문(Quiz)에 답하라!
---------------------------------------------------------------------------------------------

[ Test1 ]
- test.h파일에 int add(int a, int b)를 선언한다.
- test.c파일에 int add(int a, int b)를 구현한다.
- add함수는 정수 두개를 인자로 받아 a+b를 반환한다.
- main.c에서 add(10, 20)을 printf로 출력하는 코드를 작성한다.
- 선언과 정의 둘다 static을 붙이지 않고 수행한다.
(Quiz1): 수행되는가? 
(Answer1): (yes or no) yes
---------------------------------------------------------------------------------------------

[ Test2 ]
- 실험과정1에서 선언에만 static을 붙이고 수행한다.

(Quiz2): 수행되는가? 
(Answer2): (yes or no) no
---------------------------------------------------------------------------------------------

[ Test3 ]
- 실험과정1에서 정의에만 static을 붙이고 수행한다.

(Quiz3): 수행되는가? (yes or no)
(Answer3): (yes or no) no
---------------------------------------------------------------------------------------------

[ Test4 ]
- 실험과정1에서 선언과 정의 모두 static을 붙이고 수행한다.

(Quiz4): 수행되는가?
(Answer4): (yes or no) no

(Quiz5): 실험과정 1~4에 대한 결과에 대해 논리적으로 이유를 추론해라!
(Answer5): (reason)
	static은 정적클래스로 유효 영역은 선언된 블록 내부이다.
	실험2, 3, 4의 경우, 함수 add의 선언 또는 정의에 static을 붙였으므로
	static이 붙은 블록 외부인 main.c에서 참조할 수 없기 때문에 실행이 되지 않는다. 

(Quiz6): 함수 정의에 static을 붙이는 이유는 무엇이라 생각하는가?
(Answer6): (reason) 바꾸어지면 안되는 정보들을 외부에서 함부로 참조할 수 없도록 하기 위함.

(Quiz7): 함수 선언에 static을 붙이는 것은 무의미하다고 볼 수 있는가?
(Answer7): (yes or no) & (reason) no
reason : static을 잘못 붙이면 갑자기 실행이 안되는 경우처럼 static을 붙이는 것은
	중요하다고 생각한다. 따라서 무의미하지 않다.
---------------------------------------------------------------------------------------------